#include <iostream>
#include <queue>
using namespace std; 
class Stack { 
    // Two inbuilt queues 
    queue<int> q1, q2, q; 
    int curr_size;
    public: 
        Stack() 
        { 
            curr_size = 0; 
        } 
        //to insert an element
        void push(int x) 
        { 
            curr_size++; 
            // Push x first in empty q2 
            q2.push(x); 
            // Push all the remaining elements in q1 to q2. 
            while (!q1.empty()) { 
                q2.push(q1.front()); 
                q1.pop(); 
            }
            // swap the names of two queues 
            q = q1; 
            q1 = q2; 
            q2 = q; 
        }
        //to remove the last element
        void pop() 
        { 
            // if no elements are there in q1 
            if (q1.empty()) 
                return;
            q1.pop();              
            curr_size--;

        } 
        //to get last element
        int top() 
        { 
            if (q1.empty()) 
                return -1; 
            return q1.front(); 
        } 
}; 
int main() 
{ 
    Stack test; 
    test.push(1); 
    test.push(2); 
    test.push(3);
    cout<<"\n --------- Stack using Queue -------\n";
    cout <<"                 "<< test.top() << endl; 
    test.pop(); 
    cout <<"                 "<< test.top() << endl; 
    test.pop(); 
    cout <<"                 "<< test.top() << endl; 
    return 0; 
} 

